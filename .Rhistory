getwd()
setwd("/Users/stuartjones/Documents/Research/LTER_EAGER/scalingC/USGSwqpFeasibilityInvestigation/")
lakes=read.csv("../NLA2007_SampledLakeInformation_20091113.csv",stringsAsFactors=FALSE)
lakes=lakes[lakes$VISIT_NO==1,]
basin=read.csv("../nla2007_basin_landuse_metrics_20061022.csv",stringsAsFactors=FALSE)
countSites<-function(coords,buffer,param){
# coords in vector longitude, latitude
# buffer in decimal degrees
# parameter code from USGS database: 00666 -> TP, 00681 -> DOC
boxCoords=round(c(coords[1]-buffer,coords[2]-buffer,coords[1]+buffer,coords[2]+buffer),6)
sites=try(whatNWISsites(bBox=boxCoords,parameterCd=param),silent=TRUE)
if(class(sites)=="try-error"){
return(0)
}else{
return(sum(sites$site_tp_cd=="ST"))
}
}
TPsiteCounts=read.table("TPsiteCounts.txt",header=TRUE,sep="\t",stringsAsFactors=FALSE)
DOCsiteCounts=read.table("DOCsiteCounts.txt",header=TRUE,sep="\t",stringsAsFactors=FALSE)
dev.new()
par(mfrow=c(3,2))
hist(TPsiteCounts[,2])
hist(TPsiteCounts[,3])
hist(TPsiteCounts[,4])
hist(TPsiteCounts[,5])
hist(TPsiteCounts[,6])
dev.new()
par(mfrow=c(3,2))
hist(TPsiteCounts[,2])
hist(TPsiteCounts[,3])
hist(TPsiteCounts[,4])
hist(TPsiteCounts[,5])
hist(TPsiteCounts[,6])
colSums((TPsiteCounts[,-1]>0)*1)
head(TPsiteCounts)
par(mfrow=c(3,2))
hist(TPsiteCounts[,2],breaks=seq(0,max(TPsiteCounts)))
hist(TPsiteCounts[,3],breaks=seq(0,max(TPsiteCounts)))
hist(TPsiteCounts[,4],breaks=seq(0,max(TPsiteCounts)))
hist(TPsiteCounts[,5],breaks=seq(0,max(TPsiteCounts)))
hist(TPsiteCounts[,6],breaks=seq(0,max(TPsiteCounts)))
par(mfrow=c(3,2))
hist(TPsiteCounts[,2],breaks=seq(0,max(TPsiteCounts[,-1])))
hist(TPsiteCounts[,3],breaks=seq(0,max(TPsiteCounts[,-1])))
hist(TPsiteCounts[,4],breaks=seq(0,max(TPsiteCounts[,-1])))
hist(TPsiteCounts[,5],breaks=seq(0,max(TPsiteCounts[,-1])))
hist(TPsiteCounts[,6],breaks=seq(0,max(TPsiteCounts[,-1])))
par(mfrow=c(3,2))
hist(TPsiteCounts[,2],breaks=seq(0,max(TPsiteCounts[,-1])),xlim=c(0,10))
hist(TPsiteCounts[,3],breaks=seq(0,max(TPsiteCounts[,-1])),xlim=c(0,10))
hist(TPsiteCounts[,4],breaks=seq(0,max(TPsiteCounts[,-1])),xlim=c(0,10))
hist(TPsiteCounts[,5],breaks=seq(0,max(TPsiteCounts[,-1])),xlim=c(0,10))
hist(TPsiteCounts[,6],breaks=seq(0,max(TPsiteCounts[,-1])),xlim=c(0,10))
colSums((TPsiteCounts[,-1]>0)*1)
colSums((TPsiteCounts[,-1]>0)*1)/nrow(TPsiteCounts)
sqrt(8742)
hist(DOCsiteCounts[,2],breaks=seq(0,max(DOCsiteCounts[,-1])),xlim=c(0,10))
hist(DOCsiteCounts[,3],breaks=seq(0,max(DOCsiteCounts[,-1])),xlim=c(0,10))
hist(DOCsiteCounts[,4],breaks=seq(0,max(DOCsiteCounts[,-1])),xlim=c(0,10))
hist(DOCsiteCounts[,5],breaks=seq(0,max(DOCsiteCounts[,-1])),xlim=c(0,10))
hist(DOCsiteCounts[,6],breaks=seq(0,max(DOCsiteCounts[,-1])),xlim=c(0,10))
hist(DOCsiteCounts[,2],breaks=seq(0,max(DOCsiteCounts[,-1])),xlim=c(0,10))
hist(DOCsiteCounts[,3],breaks=seq(0,max(DOCsiteCounts[,-1])),xlim=c(0,10))
hist(DOCsiteCounts[,4],breaks=seq(0,max(DOCsiteCounts[,-1])),xlim=c(0,10))
hist(DOCsiteCounts[,5],breaks=seq(0,max(DOCsiteCounts[,-1])),xlim=c(0,10))
hist(DOCsiteCounts[,6],breaks=seq(0,max(DOCsiteCounts[,-1])),xlim=c(0,10))
hist(DOCsiteCounts[,2],breaks=seq(0,max(DOCsiteCounts[,-1])),xlim=c(0,10))
hist(DOCsiteCounts[,3],breaks=seq(0,max(DOCsiteCounts[,-1])),xlim=c(0,10))
hist(DOCsiteCounts[,4],breaks=seq(0,max(DOCsiteCounts[,-1])),xlim=c(0,10))
hist(DOCsiteCounts[,5],breaks=seq(0,max(DOCsiteCounts[,-1])),xlim=c(0,10))
hist(DOCsiteCounts[,6],breaks=seq(0,max(DOCsiteCounts[,-1])),xlim=c(0,10))
par(mfrow=c(3,2))
hist(DOCsiteCounts[,2],breaks=seq(0,max(DOCsiteCounts[,-1])),xlim=c(0,10))
hist(DOCsiteCounts[,3],breaks=seq(0,max(DOCsiteCounts[,-1])),xlim=c(0,10))
hist(DOCsiteCounts[,4],breaks=seq(0,max(DOCsiteCounts[,-1])),xlim=c(0,10))
hist(DOCsiteCounts[,5],breaks=seq(0,max(DOCsiteCounts[,-1])),xlim=c(0,10))
hist(DOCsiteCounts[,6],breaks=seq(0,max(DOCsiteCounts[,-1])),xlim=c(0,10))
colSums((DOCsiteCounts[,-1]>0)*1)/nrow(DOCsiteCounts)
rm(list=ls())
library(prism)
install.package(prism)
package.install(prism)
install.packages("prism")
rm(list=ls())
library(prism)
options(prism.path="./prismDownloads")
get_prism_annual(type="ppt",years=2000:2010,keepZip=FALSE)
ls_prism_data()
PPTto_slice=grep("ppt",ls_prism_data()[,1],value=TRUE)
annualPPT=matrix(NA,length(PPTto_slice),nrow(lakes))
lakes=read.csv("NLA2007_SampledLakeInformation_20091113.csv",header=TRUE,fill=TRUE,stringsAsFactors=FALSE)
list.files()
setwd("..")
list.files()
lakes=read.csv("NLA2007_SampledLakeInformation_20091113.csv",header=TRUE,fill=TRUE,stringsAsFactors=FALSE)
lakes=lakes[lakes$VISIT_NO==1,]
dim(lakes)
annualPPT=matrix(NA,length(PPTto_slice),nrow(lakes))
dim(annualPPT)
i=1
colnames(lakes)
lakes[1:5,1:10]
dim(annualPPT)
curCoords=as.numeric(lakes[1,9:10])
curCoords
curPPT=prism_slice(curCoords,PPTto_slice)
PPTto_slice
rm(list=ls())
library(prism)
options(prism.path="./prismDownloads")
get_prism_annual(type="ppt",years=2000:2010,keepZip=FALSE)
ls_prism_data()
PPTto_slice=grep("ppt",ls_prism_data()[,1],value=TRUE)
PPTto_slice
lakes=read.csv("NLA2007_SampledLakeInformation_20091113.csv",header=TRUE,fill=TRUE,stringsAsFactors=FALSE)
lakes=lakes[lakes$VISIT_NO==1,]
annualPPT=matrix(NA,length(PPTto_slice),nrow(lakes))
lakes2=read.csv("potentialGLEONlakes.csv",header=TRUE,fill=TRUE,stringsAsFactors=FALSE)
lakes2=lakes2[c(1:3,5:8,10,12:13,17,20,22),]
lakes2=rbind(lakes2,c("George",43.511075,-73.652069,rep(NA,6)))
lakes2=rbind(lakes2,c("Giles",41.375603,-75.094064,rep(NA,6)))
lakes2=rbind(lakes2,c("Allequash",46.036449,-89.623894,rep(NA,6)))
lakes2=rbind(lakes2,c("Crystal",45.999989,-89.614569,rep(NA,6)))
lakes2=rbind(lakes2,c("Hummingbird",46.243271,-89.505772,rep(NA,6)))
setwd("../scalingRvF/")
lakes2=read.csv("potentialGLEONlakes.csv",header=TRUE,fill=TRUE,stringsAsFactors=FALSE)
lakes2=lakes2[c(1:3,5:8,10,12:13,17,20,22),]
lakes2=rbind(lakes2,c("George",43.511075,-73.652069,rep(NA,6)))
lakes2=rbind(lakes2,c("Giles",41.375603,-75.094064,rep(NA,6)))
lakes2=rbind(lakes2,c("Allequash",46.036449,-89.623894,rep(NA,6)))
lakes2=rbind(lakes2,c("Crystal",45.999989,-89.614569,rep(NA,6)))
lakes2=rbind(lakes2,c("Hummingbird",46.243271,-89.505772,rep(NA,6)))
lakes2=c("Giles",41.375603,-75.094064,rep(NA,6)))
lakes=rbind(lakes,c("Allequash",46.036449,-89.623894,rep(NA,6)))
lakes=rbind(lakes,c("Crystal",45.999989,-89.614569,rep(NA,6)))
lakes=rbind(lakes,c("Hummingbird",46.243271,-89.505772,rep(NA,6)))
lakes2=c("Giles",41.375603,-75.094064,rep(NA,6)))
lakes2=rbind(lakes2,c("Allequash",46.036449,-89.623894,rep(NA,6)))
lakes2=rbind(lakes2,c("Crystal",45.999989,-89.614569,rep(NA,6)))
lakes2=rbind(lakes2,c("Hummingbird",46.243271,-89.505772,rep(NA,6)))
lakes2=c("Giles",41.375603,-75.094064,rep(NA,6))
lakes2=rbind(lakes2,c("Allequash",46.036449,-89.623894,rep(NA,6)))
lakes2=rbind(lakes2,c("Crystal",45.999989,-89.614569,rep(NA,6)))
lakes2=rbind(lakes2,c("Hummingbird",46.243271,-89.505772,rep(NA,6)))
lakes2
curCoords=as.numeric(lakes[1,3:2])
curCoords
lakes2
lakes2[1,3:2]
curCoords=as.numeric(lakes2[1,3:2])
curCoords
curPPT=prism_slice(curCoords,PPTto_slice)
?prism_slice
ls_prism_data()
setwd("../scalingC/")
list.files()
setwd("prismDownloads/")
curCoords
curPPT=prism_slice(curCoords,PPTto_slice)
get_prism_Dailys(type="tmean",minDate="2013-06-01",maxDate="2013-06-14")
get_prism_dailys(type="tmean",minDate="2013-06-01",maxDate="2013-06-14")
p=prism_slice(c(-73.2119,44.4758),ls_prism_data())
p=prism_slice(c(-73.2119,44.4758),ls_prism_data()[,1])
p
print(p)
summary(p)
p$data
rm(list=ls())
library(prism)
options(prism.path="./prismDownloads")
# pull annual precipitation (and mean air temperatre) from prism database
get_prism_annual(type="ppt",years=2000:2010,keepZip=FALSE)
#get_prism_annual(type="tmean",years=2000:2010,keepZip=FALSE)
# look at the files we have
ls_prism_data()
PPTto_slice=ls_prism_data()[,1]
PPTto_slice=ls_prism_data()[,1]
PPTto_slice
lakes=read.csv("NLA2007_SampledLakeInformation_20091113.csv",header=TRUE,fill=TRUE,stringsAsFactors=FALSE)
lakes=lakes[lakes$VISIT_NO==1,]
list.files()
getwd()
setwd()
setwd("..")
getwd()
list.files()
get_prism_annual(type="ppt",years=2000:2010,keepZip=FALSE)
ls_prism_data()
PPTto_slice=ls_prism_data()[,1]
lakes=read.csv("NLA2007_SampledLakeInformation_20091113.csv",header=TRUE,fill=TRUE,stringsAsFactors=FALSE)
lakes=lakes[lakes$VISIT_NO==1,]
annualPPT=matrix(NA,length(PPTto_slice),nrow(lakes))
dim(annualPPT)
curCoords=as.numeric(lakes[i,9:10])
i=1
curCoords=as.numeric(lakes[i,9:10])
curCoords
prism_slice
?prism_slice
curCoords=as.numeric(lakes[i,10:9])
curPPT=prism_slice(curCoords,PPTto_slice)
curCoords
PPTto_slice
curPPT
curPPT=prism_slice(curCoords,PPTto_slice)
p<-prism_slice(curCoords,PPTto_slice)
p<-prism_slice(curCoords,ls_prism_data()[,1])
ls_prism_data()
PPTto_slice=ls_prism_data()[,1]
lakes=read.csv("NLA2007_SampledLakeInformation_20091113.csv",header=TRUE,fill=TRUE,stringsAsFactors=FALSE)
lakes=lakes[lakes$VISIT_NO==1,]
annualPPT=matrix(NA,length(PPTto_slice),nrow(lakes))
curCoords=as.numeric(lakes[i,10:9])
o
i
p<-prism_slice(curCoords,ls_prism_data()[,1])
p<-prism_slice(curCoords,ls_prism_data()[1,1])
curCoords
curCoords=as.numeric(lakes[i,10:9])
curCoords
curCoords=as.numeric(lakes[i,9:10])
curCoords
p<-prism_slice(curCoords,ls_prism_data()[,1])
rm(list=ls())
library(prism)
options(prism.path="./prismDownloads")
# pull annual precipitation from prism database
get_prism_annual(type="ppt",years=2000:2009,keepZip=FALSE)
# look at the files we have
ls_prism_data()
# generate list of precipitation data files to pull numbers based on lat-long
PPTto_slice=ls_prism_data()[,1]
# load list of NLA2007 lakes
lakes=read.csv("NLA2007_SampledLakeInformation_20091113.csv",header=TRUE,fill=TRUE,stringsAsFactors=FALSE)
lakes=lakes[lakes$VISIT_NO==1,]
annualPPT=matrix(NA,length(PPTto_slice),nrow(lakes))
for(i in 1:ncol(annualPPT)){
curCoords=as.numeric(lakes[i,9:10])
annualPPT[,i]=prism_slice(curCoords,ls_prism_data()[,1])$data[,1]
}
dim(annualPPT)
annualPPT=matrix(NA,length(PPTto_slice),nrow(lakes))
for(i in 1:ncol(annualPPT)){
print(i)
curCoords=as.numeric(lakes[i,9:10])
annualPPT[,i]=prism_slice(curCoords,ls_prism_data()[,1])$data[,1]
}
colnames(lakes)
lakes[1:5,1:5]
?apply
MAP=cbind(lakes$SITE_ID,colMeans(annualPPT),apply(annualPPT,2,function(x) sd(x)/mean(x)))
head(MAP)
colnames(MAP)=c("SITE_ID","MAP_cm","MAP_CV")
rm(list=ls())
library(prism)
options(prism.path="./prismDownloads")
getwd()
list.files()
ls_prism_data()
# generate list of precipitation data files to pull numbers based on lat-long
PPTto_slice=ls_prism_data()[,1]
lakes=read.csv("NLA2007_SampledLakeInformation_20091113.csv",header=TRUE,fill=TRUE,stringsAsFactors=FALSE)
lakes=lakes[lakes$VISIT_NO==1,]
annualPPT=matrix(NA,length(PPTto_slice),nrow(lakes))
for(i in 1:ncol(annualPPT)){
print(i)
curCoords=as.numeric(lakes[i,9:10])
annualPPT[,i]=prism_slice(curCoords,ls_prism_data()[,1])$data[,1]
}
MAP=cbind(lakes$SITE_ID,colMeans(annualPPT),apply(annualPPT,2,function(x) sd(x)/mean(x)))
colnames(MAP)=c("SITE_ID","MAP_cm","MAP_CV")
dim(MAP)
head(MAP)
write.table(MAP,"NLA2007_prism2000s_MAP.txt",row.names=FALSE,sep="\t")
list.files()
